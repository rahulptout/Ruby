[1mdiff --git a/Ruby b/Ruby[m
[1mnew file mode 160000[m
[1mindex 0000000..ed8ad9e[m
[1m--- /dev/null[m
[1m+++ b/Ruby[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit ed8ad9e217e01562f59a8c0e14b1cead6bb366fd[m
[1mdiff --git a/Ruby_15_07_2022/duplicate_words_count.rb b/Ruby_15_07_2022/duplicate_words_count.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..627d68b[m
[1m--- /dev/null[m
[1m+++ b/Ruby_15_07_2022/duplicate_words_count.rb[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32m# @wordArray = [][m
[32m+[m[32m#    print "Enter a String :  "[m
[32m+[m[32m   # content = "A paragraph is a series of sentences that are organized and coherent, and are all related to a single topic. Almost every piece of writing you do that is longer than a few sentences should be organized into paragraphs. This is because paragraphs show a reader where the subdivisions of an essay begin and end, and thus help the reader see the organization of the essay and grasp its main points."[m
[32m+[m[32m# 	# content = gets.chomp.to_s[m
[32m+[m[32m# 	content =content.downcase[m[41m [m
[32m+[m[32m# 	content = content.gsub(/[,.;]/,"")[m
[32m+[m[32m# 	@wordArray = content.split[m
[32m+[m[32m# 	 # puts @wordArray[m
[32m+[m
[32m+[m[41m   [m
[32m+[m[32mprint "Enter your String  : "[m
[32m+[m[32mwordsArray = gets.chomp.to_s.downcase[m
[32m+[m[32mwordsArray = wordsArray.gsub(/[,.;]/,"").split[m
[32m+[m
[32m+[m[32mkeys =[][m
[32m+[m[32m# values = [][m
[32m+[m[32m# ht = Hash.new {|h,k| h[k]=[]}[m
[32m+[m[32mfor i in wordsArray do[m
[32m+[m	[32mcount = 0[m
[32m+[m[32m    for j in wordsArray do[m
[32m+[m[32m       if i==j[m
[32m+[m[32m           count +=1[m
[32m+[m[32m       end[m
[32m+[m[32m    end[m
[32m+[m[32m    # ht["#{count}"] << "#{i}"[m
[32m+[m[32m    keys.push("#{i} : #{count}")[m
[32m+[m[32m    # values.push(i)[m
[32m+[m[32mend[m[41m    [m
[32m+[m
[32m+[m
[32m+[m[32m# ht.each do |key, value|[m
[32m+[m[32m#     puts "#{key} = #{value}"[m
[32m+[m[32m# end[m
[32m+[m[32mkeys = keys.uniq[m
[32m+[m[32mkeys = keys.sort_by { |s| s.scan(/\d+/).first.to_i }[m
[32m+[m[32m# puts keys[m
[32m+[m[32mk=keys.length-1[m
[32m+[m[32m# puts k[m
[32m+[m[32mwhile k>=0[m
[32m+[m	[32mputs "#{keys[k]}"[m
[32m+[m	[32mk-=1[m
[32m+[m[41m	[m
[32m+[m[32mend[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
